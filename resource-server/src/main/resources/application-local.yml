host: 'localhost'
server:
  port: 8083
# This is keycloak from docker-compose.yml
keycloak:
  uri: 'http://${host}:8080'
  realm: "alfa-skillbox-keycloak"
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: '${keycloak.uri}/auth/realms/${keycloak.realm}/protocol/openid-connect/certs'

clients:
  permit:
    authorities:
      by-realm-role:
        claim: "realm-roles"
        prefix: "ROLE_"
        authority: "authorization-client-realm-role"
        endpoint: "/resource-server/by-realm-role"
      by-client-role:
        claim: "client-roles"
        prefix: "ROLE_"
        authority: "client-role"
        endpoint: "/resource-server/by-client-role"
      by-clients-default-scope:
        claim: "scope"
        prefix: "SCOPE_"
        authority: "clients-default-scope"
        endpoint: "/resource-server/by-default-scope"
      by-clients-optional-scope:
        claim: "scope"
        prefix: "SCOPE_"
        authority: "clients-optional-scope"
        endpoint: "/resource-server/by-optional-scope"
      by-user-group:
        claim: "user-group"
        prefix: "GROUP_"
        authority: "ship_crew"
        endpoint: "/resource-server/by-user-group"
      by-claim:
        claim: "user-attribute"
        prefix: "CLAIM_"
        authority: "Mutant"
        endpoint: "/resource-server/by-claim"

logging:
  level:
    org.springframework: INFO
    org.springframework.web.client: DEBUG
    org.springframework.security.oauth2: DEBUG

management:
  endpoints:
    loggers:
      enabled: true
    web:
      exposure:
        include: loggers, health